# Generated by Django 5.0.6 on 2024-07-05 09:27

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="EngineeringDetail",
            fields=[
                ("id", models.AutoField(primary_key=True, serialize=False)),
                ("check_id", models.IntegerField()),
                ("doc_customer", models.CharField(max_length=50)),
                ("doc_no", models.CharField(max_length=50)),
                ("doc_number_engineer", models.CharField(max_length=100)),
                ("test_speed", models.FloatField()),
                ("test_speed_unit", models.TextField()),
                ("flow_ope", models.FloatField()),
                ("flow_ope_unit", models.TextField()),
                ("suction_pres_ope", models.FloatField()),
                ("suction_pres_ope_unit", models.TextField()),
                ("discharge_pres_ope", models.FloatField()),
                ("discharge_pres_ope_unit", models.TextField()),
                ("diff_pres_ope", models.FloatField()),
                ("diff_pres_ope_unit", models.TextField()),
                ("current_i1_ope", models.FloatField()),
                ("current_i1_ope_unit", models.TextField()),
                ("current_i2_ope", models.FloatField()),
                ("current_i2_ope_unit", models.TextField()),
                ("current_i3_ope", models.FloatField()),
                ("current_i3_ope_unit", models.TextField()),
                ("i_avg_ope", models.FloatField()),
                ("i_avg_ope_unit", models.TextField()),
                ("v_avg_ope", models.FloatField()),
                ("v_avg_ope_unit", models.TextField()),
                ("motor_shaft_ope", models.FloatField()),
                ("motor_shaft_ope_unit", models.TextField()),
                ("head_ope", models.FloatField()),
                ("head_ope_unit", models.TextField()),
                ("head_shut", models.FloatField()),
                ("head_shut_unit", models.TextField()),
                ("head_max", models.FloatField()),
                ("head_max_unit", models.TextField()),
                ("v_pump_de_h", models.FloatField()),
                ("v_pump_de_h_unit", models.TextField()),
                ("v_pump_de_v", models.FloatField()),
                ("v_pump_de_v_unit", models.TextField()),
                ("v_pump_de_a", models.FloatField()),
                ("v_pump_de_a_unit", models.TextField()),
                ("v_pump_nde_h", models.FloatField()),
                ("v_pump_nde_h_unit", models.TextField()),
                ("v_pump_nde_v", models.FloatField()),
                ("v_pump_nde_v_unit", models.TextField()),
                ("v_pump_nde_a", models.FloatField()),
                ("v_pump_nde_a_unit", models.TextField()),
                ("v_motor_de_h", models.FloatField()),
                ("v_motor_de_h_unit", models.TextField()),
                ("v_motor_de_v", models.FloatField()),
                ("v_motor_de_v_unit", models.TextField()),
                ("v_motor_de_a", models.FloatField()),
                ("v_motor_de_a_unit", models.TextField()),
                ("v_motor_nde_h", models.FloatField()),
                ("v_motor_nde_h_unit", models.TextField()),
                ("v_motor_nde_v", models.FloatField()),
                ("v_motor_nde_v_unit", models.TextField()),
                ("v_motor_nde_a", models.FloatField()),
                ("v_motor_nde_a_unit", models.TextField()),
                ("a_pump_de_h", models.FloatField()),
                ("a_pump_de_h_unit", models.TextField()),
                ("a_pump_de_v", models.FloatField()),
                ("a_pump_de_v_unit", models.TextField()),
                ("a_pump_de_a", models.FloatField()),
                ("a_pump_de_a_unit", models.TextField()),
                ("a_pump_nde_h", models.FloatField()),
                ("a_pump_nde_h_unit", models.TextField()),
                ("a_pump_nde_v", models.FloatField()),
                ("a_pump_nde_v_unit", models.TextField()),
                ("a_pump_nde_a", models.FloatField()),
                ("a_pump_nde_a_unit", models.TextField()),
                ("a_motor_de_h", models.FloatField()),
                ("a_motor_de_h_unit", models.TextField()),
                ("a_motor_de_v", models.FloatField()),
                ("a_motor_de_v_unit", models.TextField()),
                ("a_motor_de_a", models.FloatField()),
                ("a_motor_de_a_unit", models.TextField()),
                ("a_motor_nde_h", models.FloatField()),
                ("a_motor_nde_h_unit", models.TextField()),
                ("a_motor_nde_v", models.FloatField()),
                ("a_motor_nde_v_unit", models.TextField()),
                ("a_motor_nde_a", models.FloatField()),
                ("a_motor_nde_a_unit", models.TextField()),
                ("temp_pump_nde", models.FloatField()),
                ("temp_pump_nde_unit", models.TextField()),
                ("temp_pump_de", models.FloatField()),
                ("temp_motor_nde", models.FloatField()),
                ("temp_motor_de", models.FloatField()),
                ("env_vibration", models.TextField()),
                ("env_vibration_unit", models.TextField(blank=True, null=True)),
                ("env_temp", models.FloatField()),
                ("liquid_temp", models.FloatField()),
                ("npsha", models.FloatField(blank=True, null=True)),
                ("npsha_unit", models.TextField()),
                ("suction_fluid_velo", models.FloatField()),
                ("suction_fluid_velo_unit", models.TextField()),
                ("discharge_fluid_velo", models.FloatField()),
                ("discharge_fluid_velo_unit", models.TextField()),
                ("remarks", models.TextField(blank=True, null=True)),
                ("alignment_check", models.BooleanField(default=False)),
                ("coupling_check", models.BooleanField(default=False)),
                ("suction_valve_check", models.BooleanField(default=False)),
                ("painting_check", models.BooleanField(default=False)),
                ("rotate_hand_check", models.BooleanField(default=False)),
                ("axial_hand_check", models.BooleanField(default=False)),
                ("gap_check", models.BooleanField(default=False)),
                ("discharge_valve_check", models.BooleanField(default=False)),
                ("bolt_check", models.BooleanField(default=False)),
                ("oil_grease_check", models.BooleanField(default=False)),
                ("electricity_check", models.BooleanField(default=False)),
                ("service_check", models.BooleanField(default=False)),
                ("leakage_check", models.BooleanField(default=False)),
                ("corrosion_check", models.BooleanField(default=False)),
                ("noise_check", models.BooleanField(default=False)),
                ("noise_run_check", models.BooleanField(default=False)),
                ("oil_grease_run_check", models.BooleanField(default=False)),
                ("leakage_run_check", models.BooleanField(default=False)),
                ("mechanical_run_check", models.BooleanField(default=False)),
                ("cavitation_run_check", models.BooleanField(default=False)),
                ("corrosion_run_check", models.BooleanField(default=False)),
                ("suction_valve_run_check", models.BooleanField(default=False)),
                ("discharge_valve_run_check", models.BooleanField(default=False)),
                ("painting_run_check", models.BooleanField(default=False)),
                ("electric_connectivity_run_check", models.BooleanField(default=False)),
                ("service_piping_run_check", models.BooleanField(default=False)),
                ("bolt_nut_run_check", models.BooleanField(default=False)),
                ("barrier_fluid_run_pres_check", models.BooleanField(default=False)),
                ("alignment_remark", models.TextField(blank=True, null=True)),
                ("coupling_remark", models.TextField(blank=True, null=True)),
                ("suction_valve_remark", models.TextField(blank=True, null=True)),
                ("painting_remark", models.TextField(blank=True, null=True)),
                ("rotating_remark", models.TextField(blank=True, null=True)),
                ("axial_hand_remark", models.TextField(blank=True, null=True)),
                ("gap_remark", models.TextField(blank=True, null=True)),
                ("discharge_valve_remark", models.TextField(blank=True, null=True)),
                ("bolt_remark", models.TextField(blank=True, null=True)),
                ("oil_remark", models.TextField(blank=True, null=True)),
                ("electricity_remark", models.TextField(blank=True, null=True)),
                ("service_remark", models.TextField(blank=True, null=True)),
                ("leakage_remark", models.TextField(blank=True, null=True)),
                ("corrosion_remark", models.TextField(blank=True, null=True)),
                ("noise_remark", models.TextField(blank=True, null=True)),
                ("noise_run_remark", models.TextField(blank=True, null=True)),
                ("oil_run_remark", models.TextField(blank=True, null=True)),
                ("leakage_run_remark", models.TextField(blank=True, null=True)),
                ("mechanical_run_remark", models.TextField(blank=True, null=True)),
                ("cavitation_run_remark", models.TextField(blank=True, null=True)),
                ("corrosion_run_remark", models.TextField(blank=True, null=True)),
                ("suction_valve_run_remark", models.TextField(blank=True, null=True)),
                ("discharge_valve_run_remark", models.TextField(blank=True, null=True)),
                ("painting_run_remark", models.TextField(blank=True, null=True)),
                (
                    "electric_connectivity_run_remark",
                    models.TextField(blank=True, null=True),
                ),
                ("service_piping_run_remark", models.TextField(blank=True, null=True)),
                ("bolt_nut_run_remark", models.TextField(blank=True, null=True)),
                (
                    "barrier_fluid_run_pres_remark",
                    models.TextField(blank=True, null=True),
                ),
                ("speed_suggest", models.TextField(blank=True, null=True)),
                ("flow_suggest", models.TextField(blank=True, null=True)),
                ("npshr_suggest", models.TextField(blank=True, null=True)),
                ("velocity_suggest", models.TextField(blank=True, null=True)),
                ("boiling_point_suggest", models.TextField(blank=True, null=True)),
                ("current_suggest", models.TextField(blank=True, null=True)),
                ("power_suggest", models.TextField(blank=True, null=True)),
                ("api_suggest", models.TextField(blank=True, null=True)),
                ("buffer_suggest", models.TextField(blank=True, null=True)),
                ("bearing_suggest", models.TextField(blank=True, null=True)),
                ("vibration_suggest", models.TextField(blank=True, null=True)),
                ("bearing_temp_suggest", models.TextField(blank=True, null=True)),
                ("timestamp", models.DateTimeField()),
            ],
            options={
                "db_table": "tbl_engineering_check",
            },
        ),
        migrations.CreateModel(
            name="PumpDetail",
            fields=[
                ("pump_id", models.AutoField(primary_key=True, serialize=False)),
                ("doc_customer", models.TextField()),
                ("doc_no", models.TextField()),
                ("doc_date", models.TextField()),
                ("brand", models.TextField()),
                ("model", models.TextField()),
                ("tag_no", models.TextField()),
                ("pump_type_id", models.TextField()),
                ("pump_type_name", models.TextField()),
                ("serial_no", models.TextField()),
                ("media", models.TextField()),
                ("pump_standard_id", models.TextField()),
                ("pump_standard", models.TextField()),
                ("pump_design", models.TextField()),
                ("stage", models.IntegerField(blank=True, null=True)),
                ("location", models.TextField(blank=True, null=True)),
                ("design_temp", models.TextField()),
                ("max_temp", models.TextField()),
                ("solid_type", models.TextField(blank=True, null=True)),
                ("solid_diameter", models.TextField(blank=True, null=True)),
                ("density", models.FloatField()),
                ("density_unit", models.TextField()),
                ("viscosity", models.FloatField()),
                ("viscosity_unit", models.TextField()),
                ("max_flow", models.IntegerField()),
                ("max_flow_unit", models.TextField()),
                ("min_flow", models.IntegerField()),
                ("min_flow_unit", models.TextField()),
                ("vapor_pressure", models.FloatField()),
                ("vapor_pressure_unit", models.TextField()),
                ("pump_speed", models.IntegerField()),
                ("pump_speed_unit", models.TextField()),
                ("design_flow", models.TextField()),
                ("design_flow_unit", models.TextField()),
                ("design_head", models.TextField()),
                ("design_head_unit", models.TextField()),
                ("min_head", models.TextField()),
                ("min_head_unit", models.TextField()),
                ("max_head", models.TextField()),
                ("max_head_unit", models.TextField()),
                ("suction_velo", models.TextField()),
                ("suction_velo_unit", models.TextField()),
                ("discharge_velo", models.TextField()),
                ("discharge_velo_unit", models.TextField()),
                ("bep_head", models.IntegerField()),
                ("bep_head_unit", models.TextField()),
                ("bep_flow", models.TextField()),
                ("bep_flow_unit", models.TextField()),
                ("npshr", models.TextField()),
                ("npshr_unit", models.TextField()),
                ("pump_efficiency", models.TextField()),
                ("pump_efficiency_unit", models.TextField()),
                ("hyd_power", models.FloatField()),
                ("hyd_power_unit", models.TextField()),
                ("voltage", models.TextField()),
                ("voltage_unit", models.TextField()),
                ("power_required_cal", models.TextField()),
                ("power_required_cal_unit", models.TextField()),
                ("power_min_flow", models.IntegerField()),
                ("power_min_flow_unit", models.TextField()),
                ("power_max_flow", models.IntegerField()),
                ("power_max_flow_unit", models.TextField()),
                ("power_bep_flow", models.IntegerField()),
                ("power_bep_flow_unit", models.TextField()),
                ("suggest_motor", models.FloatField()),
                ("pump_suction_size_id", models.TextField(blank=True, null=True)),
                ("pump_suction_size", models.TextField(blank=True, null=True)),
                ("pump_suction_rating_id", models.TextField(blank=True, null=True)),
                ("pump_suction_rating", models.TextField(blank=True, null=True)),
                ("pump_discharge_size_id", models.TextField(blank=True, null=True)),
                ("pump_discharge_size", models.TextField(blank=True, null=True)),
                ("pump_discharge_rating_id", models.TextField(blank=True, null=True)),
                ("pump_discharge_rating", models.TextField(blank=True, null=True)),
                ("suction_pipe_data_id", models.TextField()),
                ("suction_pipe_size", models.TextField()),
                ("suction_pipe_rating", models.TextField(blank=True, null=True)),
                ("suction_pipe_sch", models.TextField()),
                ("discharge_pipe_data_id", models.TextField()),
                ("discharge_pipe_size", models.TextField()),
                ("discharge_pipe_rating", models.TextField(blank=True, null=True)),
                ("discharge_pipe_sch", models.TextField()),
                ("tank_position", models.TextField(blank=True, null=True)),
                ("tank_design", models.TextField(blank=True, null=True)),
                ("tank_pressure", models.FloatField(blank=True, null=True)),
                ("suction_head", models.FloatField(blank=True, null=True)),
                ("suction_pipe_length", models.FloatField(blank=True, null=True)),
                ("discharge_pipe_length_h", models.IntegerField(blank=True, null=True)),
                ("discharge_pipe_length_v", models.IntegerField(blank=True, null=True)),
                ("suction_pipe_id", models.IntegerField()),
                ("discharge_pipe_id", models.TextField()),
                ("suction_elbow", models.IntegerField(blank=True, null=True)),
                ("suction_tee", models.FloatField(blank=True, null=True)),
                ("suction_reducer", models.FloatField(blank=True, null=True)),
                ("suction_valve", models.FloatField(blank=True, null=True)),
                ("suction_y_strainer", models.FloatField(blank=True, null=True)),
                ("suction_other", models.FloatField(blank=True, null=True)),
                ("suction_equi_length", models.FloatField(blank=True, null=True)),
                ("discharge_equi_length", models.FloatField(blank=True, null=True)),
                ("discharge_elbow", models.IntegerField(blank=True, null=True)),
                ("discharge_tee", models.FloatField(blank=True, null=True)),
                ("discharge_reducer", models.FloatField(blank=True, null=True)),
                ("discharge_valve", models.FloatField(blank=True, null=True)),
                ("discharge_y_strainer", models.FloatField(blank=True, null=True)),
                ("discharge_other", models.FloatField(blank=True, null=True)),
                ("casing_mat_id", models.IntegerField(blank=True, null=True)),
                ("casing_mat", models.TextField(blank=True, null=True)),
                ("shaft_mat_id", models.IntegerField(blank=True, null=True)),
                ("shaft_mat", models.TextField(blank=True, null=True)),
                ("diffuser_mat_id", models.IntegerField(blank=True, null=True)),
                ("diffuser_mat", models.IntegerField(blank=True, null=True)),
                ("impeller_type_id", models.IntegerField(blank=True, null=True)),
                ("impeller_type", models.TextField(blank=True, null=True)),
                ("design_impeller_dia", models.IntegerField()),
                ("impeller_max", models.IntegerField(blank=True, null=True)),
                ("impeller_mat_id", models.IntegerField(blank=True, null=True)),
                ("impeller_mat", models.TextField(blank=True, null=True)),
                ("materials_wear_ring_id", models.IntegerField(blank=True, null=True)),
                ("materials_wear_ring", models.TextField(blank=True, null=True)),
                ("bearing_nde", models.TextField(blank=True, null=True)),
                ("bearing_num", models.TextField(blank=True, null=True)),
                ("bearing_lubric_type", models.TextField(blank=True, null=True)),
                ("bearing_lubric_brand", models.TextField(blank=True, null=True)),
                ("bearing_lubric_no", models.TextField(blank=True, null=True)),
                ("rotation_de_id", models.IntegerField()),
                ("rotation_de", models.TextField()),
                ("bearing_de", models.TextField(blank=True, null=True)),
                ("bearing_de_no", models.TextField(blank=True, null=True)),
                ("bearing_last_chg_dt", models.DateTimeField(blank=True, null=True)),
                ("sleeve_mat_id", models.IntegerField(blank=True, null=True)),
                ("sleeve_mat", models.TextField(blank=True, null=True)),
                ("bearing_housing_mat_id", models.IntegerField(blank=True, null=True)),
                ("bearing_housing_mat", models.TextField(blank=True, null=True)),
                ("gland_mat", models.TextField(blank=True, null=True)),
                ("casing_gas", models.TextField(blank=True, null=True)),
                ("oring_gas", models.FloatField(blank=True, null=True)),
                ("impeller_gas", models.TextField(blank=True, null=True)),
                ("pump_lining_mat", models.TextField(blank=True, null=True)),
                ("base_plate", models.TextField(blank=True, null=True)),
                ("coup_model", models.TextField(blank=True, null=True)),
                ("coup_brand", models.TextField(blank=True, null=True)),
                ("coup_type", models.TextField()),
                ("coup_size", models.TextField(blank=True, null=True)),
                ("coup_spacer", models.IntegerField(blank=True, null=True)),
                ("motor_brand", models.TextField(blank=True, null=True)),
                ("motor_model", models.TextField(blank=True, null=True)),
                ("motor_serial_no", models.TextField(blank=True, null=True)),
                ("motor_drive_id", models.IntegerField(blank=True, null=True)),
                ("motor_drive", models.TextField(blank=True, null=True)),
                ("motor_frame", models.TextField(blank=True, null=True)),
                ("motor_protection", models.TextField(blank=True, null=True)),
                ("motor_standard", models.TextField(blank=True, null=True)),
                ("motor_ie", models.TextField(blank=True, null=True)),
                ("motor_speed", models.IntegerField()),
                ("motor_speed_unit", models.TextField()),
                ("motor_rated", models.FloatField()),
                ("motor_rated_unit", models.TextField()),
                ("motor_factor", models.FloatField()),
                ("motor_connection", models.TextField(blank=True, null=True)),
                ("motor_phase", models.IntegerField()),
                ("motor_efficiency", models.TextField()),
                ("motor_efficiency_unit", models.TextField()),
                ("mech_api_id", models.TextField()),
                (
                    "mech_api_plan",
                    models.CharField(blank=True, max_length=25, null=True),
                ),
                ("mech_main_temp", models.IntegerField(blank=True, null=True)),
                ("mech_main_pre", models.IntegerField(blank=True, null=True)),
                ("mech_seal_cham", models.TextField(blank=True, null=True)),
                ("mech_brand", models.TextField(blank=True, null=True)),
                ("mech_model", models.TextField(blank=True, null=True)),
                ("mech_size", models.IntegerField(blank=True, null=True)),
                ("mech_size_unit", models.TextField(blank=True, null=True)),
                ("mech_design_id", models.IntegerField(blank=True, null=True)),
                ("mech_design", models.TextField(blank=True, null=True)),
                ("mech_material", models.TextField(blank=True, null=True)),
                ("concentration", models.IntegerField(blank=True, null=True)),
                ("pump_status", models.TextField()),
                ("timestamp", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "tbl_pump_detail",
            },
        ),
    ]
