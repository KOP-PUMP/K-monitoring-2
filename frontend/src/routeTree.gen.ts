/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as AuthImport } from './routes/_auth'
import { Route as AuthIndexImport } from './routes/_auth/index'
import { Route as AuthSettingsImport } from './routes/_auth/settings'
import { Route as AuthCustomersImport } from './routes/_auth/customers'
import { Route as AuthPumpIndexImport } from './routes/_auth/pump/index'
import { Route as AuthDashboardIndexImport } from './routes/_auth/dashboard/index'
import { Route as AuthPumpListeditImport } from './routes/_auth/pump/list_edit'
import { Route as AuthPumpEngineeringImport } from './routes/_auth/pump/engineering'
import { Route as AuthPumpDetailImport } from './routes/_auth/pump/detail'
import { Route as AuthAnalyticModelImport } from './routes/_auth/analytic.$model'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const AuthIndexRoute = AuthIndexImport.update({
  path: '/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthSettingsRoute = AuthSettingsImport.update({
  path: '/settings',
  getParentRoute: () => AuthRoute,
} as any)

const AuthCustomersRoute = AuthCustomersImport.update({
  path: '/customers',
  getParentRoute: () => AuthRoute,
} as any)

const AuthPumpIndexRoute = AuthPumpIndexImport.update({
  path: '/pump/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthDashboardIndexRoute = AuthDashboardIndexImport.update({
  path: '/dashboard/',
  getParentRoute: () => AuthRoute,
} as any)

const AuthPumpListeditRoute = AuthPumpListeditImport.update({
  path: '/pump/list_edit',
  getParentRoute: () => AuthRoute,
} as any)

const AuthPumpEngineeringRoute = AuthPumpEngineeringImport.update({
  path: '/pump/engineering',
  getParentRoute: () => AuthRoute,
} as any)

const AuthPumpDetailRoute = AuthPumpDetailImport.update({
  path: '/pump/detail',
  getParentRoute: () => AuthRoute,
} as any)

const AuthAnalyticModelRoute = AuthAnalyticModelImport.update({
  path: '/analytic/$model',
  getParentRoute: () => AuthRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/_auth/customers': {
      id: '/_auth/customers'
      path: '/customers'
      fullPath: '/customers'
      preLoaderRoute: typeof AuthCustomersImport
      parentRoute: typeof AuthImport
    }
    '/_auth/settings': {
      id: '/_auth/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AuthSettingsImport
      parentRoute: typeof AuthImport
    }
    '/_auth/': {
      id: '/_auth/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/analytic/$model': {
      id: '/_auth/analytic/$model'
      path: '/analytic/$model'
      fullPath: '/analytic/$model'
      preLoaderRoute: typeof AuthAnalyticModelImport
      parentRoute: typeof AuthImport
    }
    '/_auth/pump/detail': {
      id: '/_auth/pump/detail'
      path: '/pump/detail'
      fullPath: '/pump/detail'
      preLoaderRoute: typeof AuthPumpDetailImport
      parentRoute: typeof AuthImport
    }
    '/_auth/pump/engineering': {
      id: '/_auth/pump/engineering'
      path: '/pump/engineering'
      fullPath: '/pump/engineering'
      preLoaderRoute: typeof AuthPumpEngineeringImport
      parentRoute: typeof AuthImport
    }
    '/_auth/pump/list_edit': {
      id: '/_auth/pump/list_edit'
      path: '/pump/list_edit'
      fullPath: '/pump/list_edit'
      preLoaderRoute: typeof AuthPumpListeditImport
      parentRoute: typeof AuthImport
    }
    '/_auth/dashboard/': {
      id: '/_auth/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AuthDashboardIndexImport
      parentRoute: typeof AuthImport
    }
    '/_auth/pump/': {
      id: '/_auth/pump/'
      path: '/pump'
      fullPath: '/pump'
      preLoaderRoute: typeof AuthPumpIndexImport
      parentRoute: typeof AuthImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  AuthRoute: AuthRoute.addChildren({
    AuthCustomersRoute,
    AuthSettingsRoute,
    AuthIndexRoute,
    AuthAnalyticModelRoute,
    AuthPumpDetailRoute,
    AuthPumpEngineeringRoute,
    AuthPumpListeditRoute,
    AuthDashboardIndexRoute,
    AuthPumpIndexRoute,
  }),
  LoginRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/login"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/customers",
        "/_auth/settings",
        "/_auth/",
        "/_auth/analytic/$model",
        "/_auth/pump/detail",
        "/_auth/pump/engineering",
        "/_auth/pump/list_edit",
        "/_auth/dashboard/",
        "/_auth/pump/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/_auth/customers": {
      "filePath": "_auth/customers.tsx",
      "parent": "/_auth"
    },
    "/_auth/settings": {
      "filePath": "_auth/settings.tsx",
      "parent": "/_auth"
    },
    "/_auth/": {
      "filePath": "_auth/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/analytic/$model": {
      "filePath": "_auth/analytic.$model.tsx",
      "parent": "/_auth"
    },
    "/_auth/pump/detail": {
      "filePath": "_auth/pump/detail.tsx",
      "parent": "/_auth"
    },
    "/_auth/pump/engineering": {
      "filePath": "_auth/pump/engineering.tsx",
      "parent": "/_auth"
    },
    "/_auth/pump/list_edit": {
      "filePath": "_auth/pump/list_edit.tsx",
      "parent": "/_auth"
    },
    "/_auth/dashboard/": {
      "filePath": "_auth/dashboard/index.tsx",
      "parent": "/_auth"
    },
    "/_auth/pump/": {
      "filePath": "_auth/pump/index.tsx",
      "parent": "/_auth"
    }
  }
}
ROUTE_MANIFEST_END */
